---
title: "Final Presentation"
author: "Nathan Butler, Samuel Twenhafel, Joshue Fuentes-Ventura"
subtitle: "Team $9$"
format: 
  revealjs:
    embed-resources: true
    theme: white
    transition: fade
---

## Feature 1: Online Sales (`online_sales`)


- The dataset includes multiple online sales channels; combining them captures digital engagement in aggregate

- Many channel columns are sparse or zero-heavy, so this helps reduce noise

- Strong online presence likely correlates with higher visibility and sales

---

## Feature 2: Profit per Item (`profit_per_item`)


- retailPrice ranges from $2 to $1400 while BOM Cost varies widely, making margin variability significant

- Highlights products priced above cost (and those below, which could be loss leaders)

- Helps isolate where price inflation may or may not be justified

---

## Feature 3: BOM Cost per Component (`bompercomp`)



- Number of Components varies from 0 to 31, indicating big differences in complexity

- Controls for scale — two products with the same BOM may differ in component count

- May flag products where cost per part is unusually high or low

---

## Feature 4: Total Cost (`total_cost`)



- Multiplies BOM Cost by Units Sold, scaling individual inefficiencies to business impact

- Products sold in bulk with high costs will spike this feature, which may indicate overinvestment

- Directly supports later profit modeling by accounting for volume

---

## Feature 5: Sale vs. No Sale (`salenosale`)



- 928 rows show “no sales” in the date column — that’s over 1/3 of the dataset

- Separates items that were technically listed but never transacted

- Avoids confusing the model with zero-revenue products when predicting success

---

## Feature 6: Log of Retail Price (`log_price`)



- Retail prices are right-skewed and vary by orders of magnitude

- Log transformation makes price relationships more linear and easier for models to interpret

- Reduces undue influence of outliers (e.g., $1400 items)

---

## Feature 7: Winter-to-Summer Sales Ratio (`winter_summer_ratio`)



- Sales by month are available — winter months often dominate (e.g., December, January)

- This ratio compresses 8 variables into one meaningful seasonal signal

- Helps detect seasonally optimized products like winter gear or summer items

---

## Feature 8: Material Premium Score (`material_premium`)



- 12 materials present, with Aluminum alone used in over 1,000 rows

- Categorical conversion to numeric allows the model to factor in perceived quality

- Distinguishes common materials from higher-end ones like Leather or Carbon Fiber

---

## Feature 9-10: Cleaned Columns to be used (`instore,direct_to_consumer`)



- Direct sales often imply higher control over margins and customer experience

- Could uncover high-margin sales strategies not visible in raw revenue

- Flags products that are sold outside of digital channels

- May be a proxy for legacy items or small-batch regional sales

---

## Model Tuning

- We tried multiple different types of methods
- Some like Random Forest proved to work much worse
- Others such as glm(Generalized Random Model) made little to no impact
---

## Results

- We got a final RMSE between roughly 1100 & 1200
- we used varImp to roughly determine which columns are important
- Most important were total cost & bompercomp
- Least important instore and direct_to_consumer